C51 COMPILER V9.59.0.0   STC_EEPROM                                                        04/19/2019 09:37:27 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE STC_EEPROM
OBJECT MODULE PLACED IN ..\OBJ\stc_eeprom.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE ..\SYSTEM\stc_eeprom\stc_eeprom.c LARGE OBJECTADVANCED OPTIMIZE(9,SIZE) 
                    -BROWSE ORDER NOAREGS INCDIR(..\HARDWARE\ds1302;..\HARDWARE\ds18b20;..\HARDWARE\lcd;..\HARDWARE\RX8010;..\HARDWARE\sht21;
                    -..\HARDWARE\sht31;..\HARDWARE\w25x;..\SYSTEM\delay;..\SYSTEM\stc_eeprom;..\SYSTEM;..\CODE) DEBUG PRINT(.\stc_eeprom.lst)
                    - TABS(2) OBJECT(..\OBJ\stc_eeprom.obj)

line level    source

   1          //#include <reg51.H>
   2          #include <intrins.H>
   3          #include "stc_eeprom.h"
   4          #include "stc12c32ad.h"
   5          
   6          //sfr IAP_DATA    = 0xC2;
   7          //sfr IAP_ADDRH   = 0xC3;
   8          //sfr IAP_ADDRL   = 0xC4;
   9          //sfr IAP_CMD     = 0xC5;
  10          //sfr IAP_TRIG    = 0xC6;
  11          //sfr IAP_CONTR   = 0xC7;
  12          
  13          //Define the waiting time for Flash operations and the constants that allow IAP/ISP/EEPROM operations
  14          #define ENABLE_ISP 0x82 //
  15          
  16          //#define DATA_FLASH_START_ADDRESS 0x00  //STC5Axx Series EEPROM Starting Address
  17          
  18          //static union 
  19          //{
  20          //    INT16U un_temp16;
  21          //    INT8U  un_temp8[2];
  22          //}my_unTemp16;
  23          static struct 
  24          {
  25            INT16U un_temp16;
  26            INT8U  un_temp8[2];
  27          }my_unTemp16;
  28          
  29          
  30          static void IAP_Disable(void);  //Disable IAP function 
  31          
  32          
  33          
  34          INT8U STC_IAP_Byte_Read(INT16U add)
  35          {
  36   1          IAP_DATA = 0x00;
  37   1          IAP_CONTR = ENABLE_ISP;         //Enable IAP
  38   1          IAP_CMD = 0x01;                 //IAP/ISP/EEPROM read byte command
  39   1      
  40   1          my_unTemp16.un_temp16 = add;
  41   1          IAP_ADDRH = my_unTemp16.un_temp8[0];   //Setting target address high 8bit
  42   1          IAP_ADDRL = my_unTemp16.un_temp8[1];   //Setting target address low 8bit
  43   1      
  44   1          IAP_TRIG = 0x5A;   //command 0X5A
  45   1          IAP_TRIG = 0xA5;   //command 0XA5
  46   1          _nop_();
  47   1      
  48   1          IAP_Disable();  //Disable IAP
  49   1      
  50   1          return (IAP_DATA);
  51   1      }
  52          
C51 COMPILER V9.59.0.0   STC_EEPROM                                                        04/19/2019 09:37:27 PAGE 2   

  53          void STC_IAP_Byte_Program(INT16U add, INT8U ch)
  54          {
  55   1          IAP_CONTR = ENABLE_ISP;         //Enable IAP
  56   1          IAP_CMD = 0x02;                 //IAP/ISP/EEPROM write byte command
  57   1      
  58   1          my_unTemp16.un_temp16 = add;
  59   1          IAP_ADDRH = my_unTemp16.un_temp8[0];    //Setting target address high 8bit
  60   1          IAP_ADDRL = my_unTemp16.un_temp8[1];    //Setting target address low 8bit
  61   1      
  62   1          IAP_DATA = ch;    
  63   1      
  64   1          IAP_TRIG = 0x5A;   //
  65   1          IAP_TRIG = 0xA5;   //
  66   1          _nop_();
  67   1      
  68   1          IAP_Disable();  //Disable IAP
  69   1      }
  70          
  71          void STC_IAP_Sector_Erase(INT16U add)
  72          {
  73   1          IAP_CONTR = ENABLE_ISP;         //Enable IAP
  74   1          IAP_CMD = 0x03;                 //IAP/ISP/EEPROM erase sector command
  75   1      
  76   1          my_unTemp16.un_temp16 = add;
  77   1          IAP_ADDRH = my_unTemp16.un_temp8[0];    //Setting target address high 8bit
  78   1          IAP_ADDRL = my_unTemp16.un_temp8[1];    //Setting target address low 8bit
  79   1      
  80   1          IAP_TRIG = 0x5A;   //
  81   1          IAP_TRIG = 0xA5;   //
  82   1          _nop_();
  83   1      
  84   1          IAP_Disable();  //Disable IAP
  85   1      }
  86          
  87          static void IAP_Disable(void) //Disable IAP
  88          { 
  89   1          IAP_CONTR = 0;      //
  90   1          IAP_CMD   = 0;      //
  91   1          IAP_TRIG  = 0;      //
  92   1          IAP_ADDRH = 0;
  93   1          IAP_ADDRL = 0;
  94   1      }
  95          
  96          
  97          
  98          
  99          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    117    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      4    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.

C51 COMPILER V9.59.0.0   STC_EEPROM                                                        04/19/2019 09:37:27 PAGE 3   


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
