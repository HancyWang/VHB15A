C51 COMPILER V9.52.0.0   STC_EEPROM                                                        03/30/2019 11:43:02 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE STC_EEPROM
OBJECT MODULE PLACED IN ..\OBJ\stc_eeprom.obj
COMPILER INVOKED BY: D:\Keil4\C51\BIN\C51.EXE ..\SYSTEM\stc_eeprom\stc_eeprom.c LARGE OBJECTADVANCED OPTIMIZE(9,SIZE) BR
                    -OWSE ORDER NOAREGS INCDIR(..\HARDWARE\ds1302;..\HARDWARE\ds18b20;..\HARDWARE\lcd;..\HARDWARE\RX8010;..\HARDWARE\sht21;..
                    -\HARDWARE\sht31;..\HARDWARE\w25x;..\SYSTEM\delay;..\SYSTEM\stc_eeprom;..\SYSTEM;..\CODE) DEBUG PRINT(.\stc_eeprom.lst) T
                    -ABS(2) OBJECT(..\OBJ\stc_eeprom.obj)

line level    source

   1          #include <reg51.H>
   2          #include <intrins.H>
   3          #include "stc_eeprom.h"
   4          
   5          sfr IAP_DATA    = 0xC2;
   6          sfr IAP_ADDRH   = 0xC3;
   7          sfr IAP_ADDRL   = 0xC4;
   8          sfr IAP_CMD     = 0xC5;
   9          sfr IAP_TRIG    = 0xC6;
  10          sfr IAP_CONTR   = 0xC7;
  11          
  12          //Define the waiting time for Flash operations and the constants that allow IAP/ISP/EEPROM operations
  13          #define ENABLE_ISP 0x82 //
  14          
  15          //#define DATA_FLASH_START_ADDRESS 0x00  //STC5Axx Series EEPROM Starting Address
  16          
  17          static union union_temp16
  18          {
  19              INT16U un_temp16;
  20              INT8U  un_temp8[2];
  21          }my_unTemp16;
  22          
  23          
  24          static void IAP_Disable();  //Disable IAP function 
  25          
  26          
  27          
  28          INT8U STC_IAP_Byte_Read(INT16U add)
  29          {
  30   1          IAP_DATA = 0x00;
  31   1          IAP_CONTR = ENABLE_ISP;         //Enable IAP
  32   1          IAP_CMD = 0x01;                 //IAP/ISP/EEPROM read byte command
  33   1      
  34   1          my_unTemp16.un_temp16 = add;
  35   1          IAP_ADDRH = my_unTemp16.un_temp8[0];   //Setting target address high 8bit
  36   1          IAP_ADDRL = my_unTemp16.un_temp8[1];   //Setting target address low 8bit
  37   1      
  38   1          IAP_TRIG = 0x5A;   //command 0X5A
  39   1          IAP_TRIG = 0xA5;   //command 0XA5
  40   1          _nop_();
  41   1      
  42   1          IAP_Disable();  //Disable IAP
  43   1      
  44   1          return (IAP_DATA);
  45   1      }
  46          
  47          void STC_IAP_Byte_Program(INT16U add, INT8U ch)
  48          {
  49   1          IAP_CONTR = ENABLE_ISP;         //Enable IAP
  50   1          IAP_CMD = 0x02;                 //IAP/ISP/EEPROM write byte command
  51   1      
  52   1          my_unTemp16.un_temp16 = add;
C51 COMPILER V9.52.0.0   STC_EEPROM                                                        03/30/2019 11:43:02 PAGE 2   

  53   1          IAP_ADDRH = my_unTemp16.un_temp8[0];    //Setting target address high 8bit
  54   1          IAP_ADDRL = my_unTemp16.un_temp8[1];    //Setting target address low 8bit
  55   1      
  56   1          IAP_DATA = ch;    
  57   1      
  58   1          IAP_TRIG = 0x5A;   //
  59   1          IAP_TRIG = 0xA5;   //
  60   1          _nop_();
  61   1      
  62   1          IAP_Disable();  //Disable IAP
  63   1      }
  64          
  65          void STC_IAP_Sector_Erase(INT16U add)
  66          {
  67   1          IAP_CONTR = ENABLE_ISP;         //Enable IAP
  68   1          IAP_CMD = 0x03;                 //IAP/ISP/EEPROM erase sector command
  69   1      
  70   1          my_unTemp16.un_temp16 = add;
  71   1          IAP_ADDRH = my_unTemp16.un_temp8[0];    //Setting target address high 8bit
  72   1          IAP_ADDRL = my_unTemp16.un_temp8[1];    //Setting target address low 8bit
  73   1      
  74   1          IAP_TRIG = 0x5A;   //
  75   1          IAP_TRIG = 0xA5;   //
  76   1          _nop_();
  77   1      
  78   1          IAP_Disable();  //Disable IAP
  79   1      }
  80          
  81          static void IAP_Disable() //Disable IAP
  82          { 
  83   1          IAP_CONTR = 0;      //
  84   1          IAP_CMD   = 0;      //
  85   1          IAP_TRIG  = 0;      //
  86   1          IAP_ADDRH = 0;
  87   1          IAP_ADDRL = 0;
  88   1      }
  89          
  90          
  91          
  92          
  93          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    125    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      2    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
