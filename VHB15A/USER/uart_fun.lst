C51 COMPILER V9.59.0.0   UART_FUN                                                          04/19/2019 09:14:00 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE UART_FUN
OBJECT MODULE PLACED IN ..\OBJ\uart_fun.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE ..\CODE\uart_fun.c LARGE OBJECTADVANCED OPTIMIZE(9,SIZE) BROWSE ORDER NO
                    -AREGS INCDIR(..\HARDWARE\ds1302;..\HARDWARE\ds18b20;..\HARDWARE\lcd;..\HARDWARE\RX8010;..\HARDWARE\sht21;..\HARDWARE\sht
                    -31;..\HARDWARE\w25x;..\SYSTEM\delay;..\SYSTEM\stc_eeprom;..\SYSTEM;..\CODE) DEBUG PRINT(.\uart_fun.lst) TABS(2) OBJECT(.
                    -.\OBJ\uart_fun.obj)

line level    source

   1          /**
   2            ******************************************************************************
   3          
   4            ******************************************************************************
   5            */ 
   6          
   7          /* Includes ------------------------------------------------------------------*/
   8          #include "uart_fun.h"
   9          #include "all.h"
  10          
  11          ////2019.03.29
  12          //sfr TMOD = 0x89;
  13          //sfr TH1  = 0x8D;
  14          //sbit TI  = (u8)0x98^(u8)1;
  15          //sbit TR1 = (u8)0x88^(u8)6;
  16          
  17          /**
  18            Section: Macro Declarations
  19          */
  20          //#define EUSART_TX_BUFFER_SIZE 64
  21          #define EUSART_RX_BUFFER_SIZE 128
  22          
  23          static uint8_t eusartRxHead = 0; //从头计数
  24          static uint8_t eusartRxTail = 0;
  25          static uint8_t eusartRxBuffer[EUSART_RX_BUFFER_SIZE];
  26          volatile uint8_t eusartRxCount;
  27          
  28          static uint8_t Send_uart_busy = 0;// 发送忙标志
  29          
  30          /**
  31            Section: EUSART APIs
  32          */
  33          
  34          ////2019.03.29
  35          //sfr ACC  = 0xE0; 
  36          //sfr PCON   = 0x87;
  37          //sfr SBUF = 0x99;
  38          //sfr IE = 0xA8;
  39          //sfr SCON = 0x98;
  40          
  41          //串口初始化
  42          void EUSART_Initialize(void)
  43          { 
  44   1        SCON  = 0x50;       //SCON: serail mode 3, 9-bit UART, enable ucvr
  45   1        TMOD |= (u8)0x20;       //TMOD: timer 1, mode 2, 8-bit reload
  46   1        PCON |= (u8)0x24;        //SMOD=1; 24
  47   1        TH1  = 0xFD;       //fosc=11.0592MHz //9600:FD 22.1184 19200*2
  48   1        IE   |= (u8)0x90;       //Enable Serial Interrupt
  49   1        TR1   = (bit)1;          // timer 1 run
  50   1      
  51   1        eusartRxHead = 0;
  52   1        eusartRxTail = 0;
C51 COMPILER V9.59.0.0   UART_FUN                                                          04/19/2019 09:14:00 PAGE 2   

  53   1        eusartRxCount = 0;  
  54   1      }
  55          
  56          //从串口接收缓冲区读一个字节
  57          uint8_t EUSART_Read(void)
  58          {
  59   1          uint8_t readValue; 
  60   1      
  61   1          readValue = eusartRxBuffer[eusartRxTail];//读出计数
  62   1          ++eusartRxTail;
  63   1          if(sizeof(eusartRxBuffer) <= eusartRxTail) //读出从头计数
  64   1          {
  65   2              eusartRxTail = 0;
  66   2          }
  67   1          eusartRxCount--;
  68   1          return readValue;
  69   1      }
  70          
  71          //发送一个字节到串口
  72          static void send_char_com(uint8_t  Send_ch)
  73          {
  74   1          ACC=Send_ch;
  75   1          SBUF=ACC; 
  76   1          Send_uart_busy = 1;
  77   1      }
  78          
  79          //写一个字节到串口发送缓冲区
  80          void EUSART_Write(uint8_t txData)
  81          {
  82   1        while(Send_uart_busy!=(uint8_t)0){};
  83   1        send_char_com(txData);
  84   1      }
  85          
  86          //发送cnt个字符到发送缓冲区
  87          void EUSART_Write_Str(const uint8_t *stra,uint8_t cnt)//发送字符串或数组到串口
  88          {
  89   1          uint8_t i;    
  90   1          for(i=0;i<cnt;i++)
  91   1          {
  92   2            EUSART_Write(stra[i]);  
  93   2          }   
  94   1      }
  95          
  96          void EUSART_Transmit_ISR(void)
  97          {   
  98   1          TI=(bit)0;  
  99   1          Send_uart_busy = 0;
 100   1      }
 101          
 102          //串口中断接收服务程序
 103          void EUSART_Receive_ISR(void)
 104          {      
 105   1          
 106   1          eusartRxBuffer[eusartRxHead] = SBUF;
 107   1          ++eusartRxHead;
 108   1      
 109   1          if(sizeof(eusartRxBuffer) <= eusartRxHead)//从头计数
 110   1          {
 111   2              eusartRxHead = 0;
 112   2          }
 113   1          eusartRxCount++;
 114   1      }
C51 COMPILER V9.59.0.0   UART_FUN                                                          04/19/2019 09:14:00 PAGE 3   

 115           
 116          
 117          /************************ (C) COPYRIGHT *****END OF FILE****/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    189    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    132       3
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
