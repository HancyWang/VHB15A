C51 COMPILER V9.52.0.0   DS18B20                                                           04/04/2019 16:21:58 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE DS18B20
OBJECT MODULE PLACED IN ..\OBJ\ds18b20.obj
COMPILER INVOKED BY: D:\Keil4\C51\BIN\C51.EXE ..\HARDWARE\DS18b20\ds18b20.c LARGE OBJECTADVANCED OPTIMIZE(9,SIZE) BROWSE
                    - ORDER NOAREGS INCDIR(..\HARDWARE\ds1302;..\HARDWARE\ds18b20;..\HARDWARE\lcd;..\HARDWARE\RX8010;..\HARDWARE\sht21;..\HAR
                    -DWARE\sht31;..\HARDWARE\w25x;..\SYSTEM\delay;..\SYSTEM\stc_eeprom;..\SYSTEM;..\CODE) DEBUG PRINT(.\ds18b20.lst) TABS(2) 
                    -OBJECT(..\OBJ\ds18b20.obj)

line level    source

   1          // #include "STC12C32AD.h"
   2           #include "all.h"
   3          // #include "INTRINS.H" 
   4          // #include "delay.h"
   5          // #include "ds18b20.h"
   6           
   7          uint8_t   Read_18B20_Value;
   8          uint8_t   Read_18B20_Value2; 
   9          
  10          //2019.03.30
  11          sbit P10 = 0x90^0;
  12          sbit P37 = 0xB0^7;
  13          
  14          //DS18B20程序=================================================
  15          void DS18B20_ReadByte(void)
  16          {
  17   1          BYTE i;
  18   1          bit Wei;
  19   1          bit Wei2;
  20   1          Read_18B20_Value=0;
  21   1          Read_18B20_Value2=0;
  22   1          //EA=0;
  23   1          for (i=0; i<8; i++)             //8位计数器
  24   1          {
  25   2              Read_18B20_Value >>= 1;
  26   2              Read_18B20_Value2 >>= 1;
  27   2              HeatingPlateSensor_Port = 0;            //开始时间片
  28   2              ChamberOutletSensor_Port = 0;            //开始时间片
  29   2              delay_us(2); 
  30   2              HeatingPlateSensor_Port = 1;             //准备接收
  31   2              ChamberOutletSensor_Port =1;
  32   2              delay_us(2);              //接收延时
  33   2              Wei=HeatingPlateSensor_Port;
  34   2              Wei2=ChamberOutletSensor_Port;
  35   2              if (Wei==1)
  36   2              {
  37   3                Read_18B20_Value |= 0x80;        //读取数据
  38   3              }         
  39   2              if (Wei2==1) 
  40   2              {
  41   3                Read_18B20_Value2 |= 0x80;        //读取数据
  42   3              }
  43   2              delay_us(90);                  //等待60us时间片结束
  44   2          }
  45   1          //EA=1; 
  46   1      }
  47          
  48          void DS18B20_WriteByte(uint8_t dat)
  49          {
  50   1          BYTE  i;
  51   1          //EA=0;
  52   1          for (i=0; i<8; i++)               //8位计数器
C51 COMPILER V9.52.0.0   DS18B20                                                           04/04/2019 16:21:58 PAGE 2   

  53   1          {
  54   2              HeatingPlateSensor_Port = 0;                        //开始时间片
  55   2              ChamberOutletSensor_Port=0;
  56   2              delay_us(2);                         //延时等待
  57   2              if((dat & 0x01)!=0)
  58   2              {
  59   3                 HeatingPlateSensor_Port = 1;
  60   3                 ChamberOutletSensor_Port=1;
  61   3              }
  62   2              else
  63   2              {
  64   3                 HeatingPlateSensor_Port=0;
  65   3                 ChamberOutletSensor_Port=0;
  66   3              }
  67   2              delay_us(110);                         //等待时间片结束
  68   2              HeatingPlateSensor_Port = 1;                     //恢复数据线
  69   2              ChamberOutletSensor_Port=1;
  70   2              delay_us(2);                         //延时等待
  71   2              dat >>= 1;                           //送出数据
  72   2          }
  73   1          //EA=1;
  74   1      }
  75          
  76          u8t DS18B20_CheckCrc(const u8t Cdata[], u8t nbrOfBytes, u8t checksum)
  77          //==============================================================================
  78          {
  79   1        u8t crc = 0;  
  80   1        u8t byteCtr;
  81   1        u8t bit8;
  82   1        u8t crc_1byte = 0;
  83   1        //calculates 8-Bit checksum with given polynomial
  84   1      //  crc = 0;
  85   1        for (byteCtr = 0; byteCtr < nbrOfBytes; ++byteCtr)
  86   1        { 
  87   2          crc ^= (Cdata[byteCtr]);
  88   2          crc_1byte ^= 0;
  89   2          for (bit8 = 0; bit8 < 8; bit8++)
  90   2          {
  91   3            if (((crc_1byte^crc) & (u8t)0x01)!=(u8t)0)
  92   3            {
  93   4              crc_1byte ^= 0x18;
  94   4              crc_1byte >>= 1;
  95   4              crc_1byte |= 0x80;
  96   4            }
  97   3            else
  98   3            {
  99   4              crc_1byte >>= 1;
 100   4            }       
 101   3            crc >>= 1;  
 102   3          }
 103   2          //crc = crc ^ crc_1byte;
 104   2        }
 105   1        if(crc_1byte != checksum) 
 106   1        {
 107   2          return CHECKSUM_ERROR;
 108   2        }
 109   1        else 
 110   1        {
 111   2          return 0;
 112   2        }
 113   1      } 

C51 COMPILER V9.52.0.0   DS18B20                                                           04/04/2019 16:21:58 PAGE 3   


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    321    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      2      10
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       2
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
