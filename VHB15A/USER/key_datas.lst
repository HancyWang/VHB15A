C51 COMPILER V9.59.0.0   KEY_DATAS                                                         04/19/2019 09:14:00 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE KEY_DATAS
OBJECT MODULE PLACED IN ..\OBJ\key_datas.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE ..\CODE\key_datas.c LARGE OBJECTADVANCED OPTIMIZE(9,SIZE) BROWSE ORDER N
                    -OAREGS INCDIR(..\HARDWARE\ds1302;..\HARDWARE\ds18b20;..\HARDWARE\lcd;..\HARDWARE\RX8010;..\HARDWARE\sht21;..\HARDWARE\sh
                    -t31;..\HARDWARE\w25x;..\SYSTEM\delay;..\SYSTEM\stc_eeprom;..\SYSTEM;..\CODE) DEBUG PRINT(.\key_datas.lst) TABS(2) OBJECT
                    -(..\OBJ\key_datas.obj)

line level    source

   1          #include "all.h"
   2          
   3          ///注意：时标为100mS
   4          
   5          
   6          KEY_STATE_DEF Key_State_Present;
   7          
   8          //==================UP按键属性设置-1============================
   9          
  10          //static void KeyUpPressShortAction(void);
  11          //static void KeyUpPressLongFirstAction(void);    //按键长键后的响应函数
  12          //static void KeyUpPressLongRepeatAction(void);  //连续按下持续,连+连-
  13          
  14          //const struct Key_Multifun_Element Key_UP_Element = 
  15          //{
  16          //  KEY_STATE_PressValue,         //PressValue
  17          //  KEY_STATE_ReleaseValue,       //ReleaseValue
  18          //  10,                           //TimOf_Low_High 按下弹起的最大响应时间
  19          //  20,                           //TimOfSe 初次长按响应时间
  20          //  5,                            //TimOfLg 后续长连续按下状态时间
  21          //  KeyUpPressShortAction,        //void (*)(void)短按键由低到高弹起
  22          //  KeyUpPressLongFirstAction,    //按键长键后的响应函数
  23          //  KeyUpPressLongRepeatAction,  //连续按下持续,连+连-
  24          //};
  25          
  26          
  27          //struct Multifun_Key Key_UP =
  28          //{
  29          //  &KeyToFuncVal,            //按键码值
  30          //  &Key_UP_Tik,  //按键时标
  31          //  1,            //处理状态
  32          //};
  33          
  34          uint8_t Key_UP_Tik = 0;
  35          void Key_UP_TikFunc(void)
  36          {
  37   1          if(Key_UP_Tik < (u8)250)
  38   1          {
  39   2             Key_UP_Tik++;
  40   2          }
  41   1      }
  42          
  43          void  KeyUpPressShortAction(void)
  44          {
  45   1        Key_State_Present = KEY_STATE_UP_Short; 
  46   1      }
  47          
  48          void  KeyUpPressLongFirstAction(void) //按键长键后的响应函数
  49          {
  50   1        Key_State_Present = KEY_STATE_UP_Long_First;  
  51   1      }    
  52          
C51 COMPILER V9.59.0.0   KEY_DATAS                                                         04/19/2019 09:14:00 PAGE 2   

  53          void  KeyUpPressLongRepeatAction(void) //连续按下持续,连+连-
  54          {
  55   1        Key_State_Present = KEY_STATE_UP_Long_Repeat;
  56   1      }
  57          
  58          //------------------------end of O define------------------
  59          
  60          //==================DOWN按键属性设置-1============================
  61          
  62          //static void KeyDownPressShortAction(void);
  63          //static void KeyDownPressLongFirstAction(void);    //按键长键后的响应函数
  64          //static void KeyDownPressLongRepeatAction(void);  //连续按下持续,连+连-
  65          
  66          //const struct Key_Multifun_Element Key_Down_Element = 
  67          //{
  68          //  KEY_STATE_PressValue,         //PressValue
  69          //  KEY_STATE_ReleaseValue,       //ReleaseValue
  70          //  10,                           //TimOf_Low_High 按下弹起的最大响应时间
  71          //  20,                           //TimOfSe 初次长按响应时间
  72          //  5,                            //TimOfLg 后续长连续按下状态时间
  73          //  KeyDownPressShortAction,        //void (*)(void)短按键由低到高弹起
  74          //  KeyDownPressLongFirstAction,    //按键长键后的响应函数
  75          //  KeyDownPressLongRepeatAction,  //连续按下持续,连+连-
  76          //};
  77          
  78          //struct Multifun_Key Key_Down =
  79          //{
  80          //  &KeyToFuncVal,            //按键码值
  81          //  &Key_Down_Tik,  //按键时标
  82          //  1,            //处理状态
  83          //};
  84          
  85          uint8_t Key_Down_Tik = 0;
  86          void Key_Down_TikFunc(void)
  87          {
  88   1          if(Key_Down_Tik < (u8)250)
  89   1          {
  90   2             Key_Down_Tik++;
  91   2          }
  92   1      }
  93          
  94          
  95          void  KeyDownPressShortAction(void)
  96          {
  97   1        Key_State_Present = KEY_STATE_Down_Short; 
  98   1      }
  99          
 100          void  KeyDownPressLongFirstAction(void) //按键长键后的响应函数
 101          {
 102   1        Key_State_Present = KEY_STATE_Down_Long_First;  
 103   1      }    
 104          
 105          void  KeyDownPressLongRepeatAction(void) //连续按下持续,连+连-
 106          {
 107   1        Key_State_Present = KEY_STATE_Down_Long_Repeat;
 108   1      }
 109          
 110          //------------------------end of define------------------
 111          
 112          //==================OK按键属性设置-1============================
 113          
 114          //static void KeyOKPressShortAction(void);
C51 COMPILER V9.59.0.0   KEY_DATAS                                                         04/19/2019 09:14:00 PAGE 3   

 115          //static void KeyOKPressLongFirstAction(void);    //按键长键后的响应函数
 116          //static void KeyOKPressLongRepeatAction(void);  //连续按下持续,连+连-
 117          
 118          //const struct Key_Multifun_Element Key_OK_Element = 
 119          //{
 120          //  KEY_STATE_PressValue,         //PressValue
 121          //  KEY_STATE_ReleaseValue,       //ReleaseValue
 122          //  10,                           //TimOf_Low_High 按下弹起的最大响应时间
 123          //  20,                           //TimOfSe 初次长按响应时间
 124          //  5,                            //TimOfLg 后续长连续按下状态时间
 125          //  KeyOKPressShortAction,        //void (*)(void)短按键由低到高弹起
 126          //  KeyOKPressLongFirstAction,    //按键长键后的响应函数
 127          //  KeyOKPressLongRepeatAction,  //连续按下持续,连+连-
 128          //};
 129          
 130          //struct Multifun_Key Key_OK =
 131          //{
 132          //  &KeyToFuncVal,            //按键码值
 133          //  &Key_OK_Tik,  //按键时标
 134          //  1,            //处理状态
 135          //};
 136          
 137          uint8_t Key_OK_Tik = 0;
 138          void Key_OK_TikFunc(void)
 139          {
 140   1          if(Key_OK_Tik < (u8)250)
 141   1          {
 142   2             Key_OK_Tik++;
 143   2          }
 144   1      }
 145          
 146          
 147          void  KeyOKPressShortAction(void)
 148          {
 149   1        Key_State_Present = KEY_STATE_OK_Short; 
 150   1      }
 151          
 152          void  KeyOKPressLongFirstAction(void) //按键长键后的响应函数
 153          {
 154   1        Key_State_Present = KEY_STATE_OK_Long_First;  
 155   1      }    
 156          
 157          void  KeyOKPressLongRepeatAction(void) //连续按下持续,连+连-
 158          {
 159   1        Key_State_Present = KEY_STATE_OK_Long_Repeat;
 160   1      }
 161          
 162          //------------------------end of O define------------------
 163          
 164          
 165          //==================UP按键属性设置-1============================
 166          
 167          //static void KeyMutePressShortAction(void);
 168          //static void KeyMutePressLongFirstAction(void);    //按键长键后的响应函数
 169          //static void KeyMutePressLongRepeatAction(void);  //连续按下持续,连+连-
 170          
 171          //const struct Key_Multifun_Element Key_Mute_Element = 
 172          //{
 173          //  KEY_STATE_PressValue,         //PressValue
 174          //  KEY_STATE_ReleaseValue,       //ReleaseValue
 175          //  10,                           //TimOf_Low_High 按下弹起的最大响应时间
 176          //  20,                           //TimOfSe 初次长按响应时间
C51 COMPILER V9.59.0.0   KEY_DATAS                                                         04/19/2019 09:14:00 PAGE 4   

 177          //  5,                            //TimOfLg 后续长连续按下状态时间
 178          //  KeyMutePressShortAction,        //void (*)(void)短按键由低到高弹起
 179          //  KeyMutePressLongFirstAction,    //按键长键后的响应函数
 180          //  KeyMutePressLongRepeatAction,  //连续按下持续,连+连-
 181          //};
 182          
 183          //struct Multifun_Key Key_Mute =
 184          //{
 185          //  &KeyToFuncVal,            //按键码值
 186          //  &Key_Mute_Tik,  //按键时标
 187          //  1,            //处理状态
 188          //};
 189          
 190          uint8_t Key_Mute_Tik = 0;
 191          void Key_Mute_TikFunc(void)
 192          {
 193   1          if(Key_Mute_Tik < (u8)250)
 194   1          {
 195   2             Key_Mute_Tik++;
 196   2          }
 197   1      }
 198          
 199          
 200          void  KeyMutePressShortAction(void)
 201          {
 202   1        Key_State_Present = KEY_STATE_Mute_Short; 
 203   1        
 204   1        if(AlarmInfoIndex!=(uint8_t)0)//有报警
 205   1        {
 206   2          if(AlarmSoundPauseStatus == (u8)0)//正常报警
 207   2          {
 208   3            AlarmSoundPauseStatus = 1;//声音暂停
 209   3            Sound_Alarm_Pause_Enable();
 210   3          }
 211   2          else//声音暂停
 212   2          {
 213   3            AlarmSoundPauseStatus = 0;//声音暂停取消
 214   3            Sound_Alarm_Pause_Disable();                
 215   3          }
 216   2        }
 217   1      }
 218          
 219          void  KeyMutePressLongFirstAction(void) //按键长键后的响应函数
 220          {
 221   1        Key_State_Present = KEY_STATE_Mute_Long_First;  
 222   1      }    
 223          
 224          void  KeyMutePressLongRepeatAction(void) //连续按下持续,连+连-
 225          {
 226   1        Key_State_Present = KEY_STATE_Mute_Long_Repeat;
 227   1      }
 228          
 229          //------------------------end of O define------------------


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    179    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      5    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
C51 COMPILER V9.59.0.0   KEY_DATAS                                                         04/19/2019 09:14:00 PAGE 5   

   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
