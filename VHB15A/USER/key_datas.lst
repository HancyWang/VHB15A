C51 COMPILER V9.52.0.0   KEY_DATAS                                                         03/30/2019 11:40:35 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE KEY_DATAS
OBJECT MODULE PLACED IN ..\OBJ\key_datas.obj
COMPILER INVOKED BY: D:\Keil4\C51\BIN\C51.EXE ..\CODE\key_datas.c LARGE OBJECTADVANCED OPTIMIZE(9,SIZE) BROWSE ORDER NOA
                    -REGS INCDIR(..\HARDWARE\ds1302;..\HARDWARE\ds18b20;..\HARDWARE\lcd;..\HARDWARE\RX8010;..\HARDWARE\sht21;..\HARDWARE\sht3
                    -1;..\HARDWARE\w25x;..\SYSTEM\delay;..\SYSTEM\stc_eeprom;..\SYSTEM;..\CODE) DEBUG PRINT(.\key_datas.lst) TABS(2) OBJECT(.
                    -.\OBJ\key_datas.obj)

line level    source

   1          #include "all.h"
   2          
   3          ///注意：时标为100mS
   4          
   5          
   6          KEY_STATE_DEF Key_State_Present;
   7          
   8          //==================UP按键属性设置-1============================
   9          
  10          static void KeyUpPressShortAction(void);
  11          static void KeyUpPressLongFirstAction(void);    //按键长键后的响应函数
  12          static void KeyUpPressLongRepeatAction(void);  //连续按下持续,连+连-
  13          
  14          const struct Key_Multifun_Element Key_UP_Element = 
  15          {
  16            KEY_STATE_PressValue,         //PressValue
  17            KEY_STATE_ReleaseValue,       //ReleaseValue
  18            10,                           //TimOf_Low_High 按下弹起的最大响应时间
  19            20,                           //TimOfSe 初次长按响应时间
  20            5,                            //TimOfLg 后续长连续按下状态时间
  21            KeyUpPressShortAction,        //void (*)(void)短按键由低到高弹起
  22            KeyUpPressLongFirstAction,    //按键长键后的响应函数
  23            KeyUpPressLongRepeatAction,  //连续按下持续,连+连-
  24          };
  25          
  26          struct Multifun_Key Key_UP =
  27          {
  28            &KeyToFuncVal,            //按键码值
  29            &Key_UP_Tik,  //按键时标
  30            1,            //处理状态
  31          };
  32          
  33          unsigned char Key_UP_Tik = 0;
  34          void Key_UP_TikFunc(void)
  35          {
  36   1          if(Key_UP_Tik < 250)
  37   1          {
  38   2             Key_UP_Tik++;
  39   2          }
  40   1      }
  41          
  42          static void KeyUpPressShortAction(void)
  43          {
  44   1        Key_State_Present = KEY_STATE_UP_Short; 
  45   1      }
  46          
  47          static void KeyUpPressLongFirstAction(void) //按键长键后的响应函数
  48          {
  49   1        Key_State_Present = KEY_STATE_UP_Long_First;  
  50   1      }    
  51          
  52          static void KeyUpPressLongRepeatAction(void) //连续按下持续,连+连-
C51 COMPILER V9.52.0.0   KEY_DATAS                                                         03/30/2019 11:40:35 PAGE 2   

  53          {
  54   1        Key_State_Present = KEY_STATE_UP_Long_Repeat;
  55   1      }
  56          
  57          //------------------------end of O define------------------
  58          
  59          //==================DOWN按键属性设置-1============================
  60          
  61          static void KeyDownPressShortAction(void);
  62          static void KeyDownPressLongFirstAction(void);    //按键长键后的响应函数
  63          static void KeyDownPressLongRepeatAction(void);  //连续按下持续,连+连-
  64          
  65          const struct Key_Multifun_Element Key_Down_Element = 
  66          {
  67            KEY_STATE_PressValue,         //PressValue
  68            KEY_STATE_ReleaseValue,       //ReleaseValue
  69            10,                           //TimOf_Low_High 按下弹起的最大响应时间
  70            20,                           //TimOfSe 初次长按响应时间
  71            5,                            //TimOfLg 后续长连续按下状态时间
  72            KeyDownPressShortAction,        //void (*)(void)短按键由低到高弹起
  73            KeyDownPressLongFirstAction,    //按键长键后的响应函数
  74            KeyDownPressLongRepeatAction,  //连续按下持续,连+连-
  75          };
  76          
  77          struct Multifun_Key Key_Down =
  78          {
  79            &KeyToFuncVal,            //按键码值
  80            &Key_Down_Tik,  //按键时标
  81            1,            //处理状态
  82          };
  83          
  84          unsigned char Key_Down_Tik = 0;
  85          void Key_Down_TikFunc(void)
  86          {
  87   1          if(Key_Down_Tik < 250)
  88   1          {
  89   2             Key_Down_Tik++;
  90   2          }
  91   1      }
  92          
  93          
  94          static void KeyDownPressShortAction(void)
  95          {
  96   1        Key_State_Present = KEY_STATE_Down_Short; 
  97   1      }
  98          
  99          static void KeyDownPressLongFirstAction(void) //按键长键后的响应函数
 100          {
 101   1        Key_State_Present = KEY_STATE_Down_Long_First;  
 102   1      }    
 103          
 104          static void KeyDownPressLongRepeatAction(void) //连续按下持续,连+连-
 105          {
 106   1        Key_State_Present = KEY_STATE_Down_Long_Repeat;
 107   1      }
 108          
 109          //------------------------end of define------------------
 110          
 111          //==================OK按键属性设置-1============================
 112          
 113          static void KeyOKPressShortAction(void);
 114          static void KeyOKPressLongFirstAction(void);    //按键长键后的响应函数
C51 COMPILER V9.52.0.0   KEY_DATAS                                                         03/30/2019 11:40:35 PAGE 3   

 115          static void KeyOKPressLongRepeatAction(void);  //连续按下持续,连+连-
 116          
 117          const struct Key_Multifun_Element Key_OK_Element = 
 118          {
 119            KEY_STATE_PressValue,         //PressValue
 120            KEY_STATE_ReleaseValue,       //ReleaseValue
 121            10,                           //TimOf_Low_High 按下弹起的最大响应时间
 122            20,                           //TimOfSe 初次长按响应时间
 123            5,                            //TimOfLg 后续长连续按下状态时间
 124            KeyOKPressShortAction,        //void (*)(void)短按键由低到高弹起
 125            KeyOKPressLongFirstAction,    //按键长键后的响应函数
 126            KeyOKPressLongRepeatAction,  //连续按下持续,连+连-
 127          };
 128          
 129          struct Multifun_Key Key_OK =
 130          {
 131            &KeyToFuncVal,            //按键码值
 132            &Key_OK_Tik,  //按键时标
 133            1,            //处理状态
 134          };
 135          
 136          unsigned char Key_OK_Tik = 0;
 137          void Key_OK_TikFunc(void)
 138          {
 139   1          if(Key_OK_Tik < 250)
 140   1          {
 141   2             Key_OK_Tik++;
 142   2          }
 143   1      }
 144          
 145          
 146          static void KeyOKPressShortAction(void)
 147          {
 148   1        Key_State_Present = KEY_STATE_OK_Short; 
 149   1      }
 150          
 151          static void KeyOKPressLongFirstAction(void) //按键长键后的响应函数
 152          {
 153   1        Key_State_Present = KEY_STATE_OK_Long_First;  
 154   1      }    
 155          
 156          static void KeyOKPressLongRepeatAction(void) //连续按下持续,连+连-
 157          {
 158   1        Key_State_Present = KEY_STATE_OK_Long_Repeat;
 159   1      }
 160          
 161          //------------------------end of O define------------------
 162          
 163          
 164          //==================UP按键属性设置-1============================
 165          
 166          static void KeyMutePressShortAction(void);
 167          static void KeyMutePressLongFirstAction(void);    //按键长键后的响应函数
 168          static void KeyMutePressLongRepeatAction(void);  //连续按下持续,连+连-
 169          
 170          const struct Key_Multifun_Element Key_Mute_Element = 
 171          {
 172            KEY_STATE_PressValue,         //PressValue
 173            KEY_STATE_ReleaseValue,       //ReleaseValue
 174            10,                           //TimOf_Low_High 按下弹起的最大响应时间
 175            20,                           //TimOfSe 初次长按响应时间
 176            5,                            //TimOfLg 后续长连续按下状态时间
C51 COMPILER V9.52.0.0   KEY_DATAS                                                         03/30/2019 11:40:35 PAGE 4   

 177            KeyMutePressShortAction,        //void (*)(void)短按键由低到高弹起
 178            KeyMutePressLongFirstAction,    //按键长键后的响应函数
 179            KeyMutePressLongRepeatAction,  //连续按下持续,连+连-
 180          };
 181          
 182          struct Multifun_Key Key_Mute =
 183          {
 184            &KeyToFuncVal,            //按键码值
 185            &Key_Mute_Tik,  //按键时标
 186            1,            //处理状态
 187          };
 188          
 189          unsigned char Key_Mute_Tik = 0;
 190          void Key_Mute_TikFunc(void)
 191          {
 192   1          if(Key_Mute_Tik < 250)
 193   1          {
 194   2             Key_Mute_Tik++;
 195   2          }
 196   1      }
 197          
 198          
 199          static void KeyMutePressShortAction(void)
 200          {
 201   1        Key_State_Present = KEY_STATE_Mute_Short; 
 202   1        
 203   1        if(AlarmInfoIndex)//有报警
 204   1        {
 205   2          if(AlarmSoundPauseStatus == 0)//正常报警
 206   2          {
 207   3            AlarmSoundPauseStatus = 1;//声音暂停
 208   3            Sound_Alarm_Pause_Enable();
 209   3          }
 210   2          else//声音暂停
 211   2          {
 212   3            AlarmSoundPauseStatus = 0;//声音暂停取消
 213   3            Sound_Alarm_Pause_Disable();                
 214   3          }
 215   2        }
 216   1      }
 217          
 218          static void KeyMutePressLongFirstAction(void) //按键长键后的响应函数
 219          {
 220   1        Key_State_Present = KEY_STATE_Mute_Long_First;  
 221   1      }    
 222          
 223          static void KeyMutePressLongRepeatAction(void) //连续按下持续,连+连-
 224          {
 225   1        Key_State_Present = KEY_STATE_Mute_Long_Repeat;
 226   1      }
 227          
 228          //------------------------end of O define------------------


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    179    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     89    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
C51 COMPILER V9.52.0.0   KEY_DATAS                                                         03/30/2019 11:40:35 PAGE 5   

   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
